% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modelib_functions.R
\name{extract}
\alias{extract}
\title{Extract a named element from all elements of a nested list object.}
\usage{
extract(llistObj, element)
}
\arguments{
\item{llistObj}{A nested list object with two levels.}

\item{element}{The name of an element to extract from each sub-list (Unquoted).}
}
\value{
A list of the extracted elements.
}
\description{
When you have a nested list object (2 levels) and you want to extract the same named element from each list, you can use \code{extract}.
}
\details{
This may come in handy with the result of other functions. For example when we perform
model fitting on a number of scales, and we use various methods on the same subset of variables.
\code{extract} allows obtaining the desired statistics from each of the fits, for each scale. See \code{func2matx} for exploiting this function to produce matrices and tables.
}
\examples{
nested_list = list(list(a=1, b=2), list(a=3,b=4))
extract(nested_list, a)
nested_list = list(list(a=c('a','b','c'), b=1:3), list(a=c('d','e','f'),b=4:6))

# the function uses this escape hatch for non-standard evaluation
extract_q(nested_list, 'a')
extract(nested_list, a)
extract(nested_list, 'a')

# functionality within other functions
# ... non-standard evaluation
foo = function(llistObj) extract(llistObj, a)

# ... standard evaluation
foo_q = function(llistObj) extract(llistObj, 'a')

# result
foo(nested_list)
foo_q(nested_list)

# combine with rbind (see func2matx documentation)
func2matx(rbind, nested_list, extract, element=a)
}
\seealso{
\code{\link{func2matx}}
}
\author{
Nikolaos Giallousis \email{ngiallousis@psyget.gr}
}
